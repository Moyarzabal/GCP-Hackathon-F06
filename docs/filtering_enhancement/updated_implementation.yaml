# 更新されたフィルタリング実装（最終版）
implementation:
  name: "カテゴリ選択ポップアップメニュー機能"
  version: "1.3.0"
  
  # アーキテクチャ
  architecture:
    pattern: "Provider Pattern with StateNotifier"
    state_management: "Riverpod"
    
  # 主要コンポーネント
  components:
    - name: "ProductNotifier"
      file: "lib/features/products/presentation/providers/product_provider.dart"
      responsibilities:
        - 商品状態の管理
        - カテゴリフィルタリングロジック
        - ソート機能
      key_methods:
        - "filterByCategory(String category)"
        - "getAvailableCategories()"
        - "_applyFilters()"
      status: "変更なし（既存ロジック活用）"
    
    - name: "HomeScreen"
      file: "lib/features/home/presentation/pages/home_screen.dart"
      responsibilities:
        - UI表示
        - カテゴリ選択UI（AppBarのPopupMenuButton）
        - 商品リスト表示
      ui_components:
        - "FilterChip List (横スクロール) - 元の形を維持"
        - "AppBarのカテゴリ選択PopupMenuButton（新規実装）"
        - "AppBarのソートPopupMenuButton（既存）"
        - "ProductCard List"
      changes:
        - "AppBarにカテゴリ選択アイコン（filter_list）を追加"
        - "PopupMenuButtonでカテゴリ一覧を表示"
        - "FilterChipは従来通りの動作を維持"
    
    - name: "availableCategoriesProvider"
      file: "lib/features/products/presentation/providers/product_provider.dart"
      responsibilities:
        - 利用可能なカテゴリの提供
        - 動的カテゴリリスト生成
      status: "変更なし（既存ロジック活用）"

  # 実装されたUI
  ui_implementation:
    appbar_actions:
      - name: "リフレッシュ"
        icon: "Icons.refresh"
        action: "データリロード"
      
      - name: "検索"
        icon: "Icons.search"
        action: "商品検索"
      
      - name: "カテゴリ選択"
        icon: "Icons.filter_list"
        action: "カテゴリフィルタリング"
        type: "PopupMenuButton<String>"
        features:
          - "カテゴリ一覧をポップアップで表示"
          - "現在選択中のカテゴリにチェックマーク"
          - "選択で直接フィルタリング実行"
      
      - name: "ソート"
        icon: "MdiIcons.sortAscending/Descending"
        action: "商品ソート"
        type: "PopupMenuButton<ProductSortType>"

    category_filter:
      type: "FilterChip List + AppBar PopupMenuButton"
      layout: "Horizontal Scrollable FilterChip + AppBar PopupMenuButton"
      location: "AppBar actions + HomeScreen lines 130-164"
      features:
        - "横スクロール可能なFilterChipリスト（従来通り）"
        - "AppBarのカテゴリ選択アイコンでポップアップ表示"
        - "選択状態の視覚的表示"
        - "既存のUIデザインを維持"
      styling:
        - "Material Design準拠"
        - "プライマリカラー使用"
        - "既存のスタイリングを維持"
      current_categories:
        - "すべて (all)"
        - "動的に生成されるカテゴリ"

  # カテゴリ選択ポップアップメニュー
  category_popup_menu:
    type: "PopupMenuButton<String>"
    location: "AppBar actions"
    features:
      - "カテゴリ一覧をポップアップで表示"
      - "現在選択中のカテゴリにチェックマーク表示"
      - "タップでカテゴリ選択"
      - "選択後は自動的にポップアップが閉じる"
    styling:
      - "Material Design PopupMenuButton"
      - "選択中のカテゴリはチェックアイコン + 太字"
      - "ソート機能と同じUIパターン"

  # 実装詳細
  implementation_details:
    ui_changes:
      - component: "AppBar Actions"
        before: "リフレッシュ + 検索 + ソート"
        after: "リフレッシュ + 検索 + カテゴリ選択 + ソート"
        location: "AppBar actions"
        
      - component: "カテゴリ選択方法"
        before: "FilterChipの直接選択のみ"
        after: "AppBarのポップアップメニュー + FilterChipの直接選択"
        
      - component: "UIレイアウト"
        before: "FilterChip List"
        after: "FilterChip List + AppBar PopupMenuButton（レイアウト変更なし）"

    code_changes:
      - file: "lib/features/home/presentation/pages/home_screen.dart"
        method: "build() - AppBar actions"
        lines: "76-95"
        changes:
          - "カテゴリ選択PopupMenuButtonを追加"
          - "filter_listアイコンを使用"
          - "availableCategoriesからカテゴリ一覧を生成"
          - "選択状態のチェックマーク表示"
        
      - file: "lib/features/home/presentation/pages/home_screen.dart"
        method: "build() - FilterChip"
        lines: "130-164"
        changes:
          - "FilterChipの動作を従来通りに戻す"
          - "すべてのカテゴリで直接フィルタリング"
        
      - file: "lib/features/home/presentation/pages/home_screen.dart"
        method: "_showCategorySelectionDialog()"
        lines: "削除"
        changes:
          - "不要なダイアログメソッドを削除"

  # データフロー
  data_flow:
    - step: "商品データ取得"
      source: "Firebase Firestore"
      target: "appStateProvider"
    
    - step: "カテゴリ抽出"
      source: "appStateProvider.products"
      target: "availableCategoriesProvider"
      method: "getAvailableCategories()"
    
    - step: "カテゴリ選択（AppBar）"
      source: "AppBar PopupMenuButton tap"
      target: "ProductNotifier.filterByCategory()"
      method: "ポップアップメニューから選択"
    
    - step: "カテゴリ選択（FilterChip）"
      source: "FilterChip tap"
      target: "ProductNotifier.filterByCategory()"
      method: "直接フィルタリング"
    
    - step: "フィルタリング適用"
      source: "ProductNotifier._applyFilters()"
      target: "ProductState.filteredProducts"
    
    - step: "UI更新"
      source: "ProductState.filteredProducts"
      target: "HomeScreen ListView"

  # 実装された機能
  implemented_features:
    - "AppBarにカテゴリ選択アイコンを追加"
    - "ソート機能と同じUIパターンのポップアップメニュー"
    - "「すべて」とカテゴリの一覧をポップアップで表示"
    - "選択されたカテゴリのみを冷蔵庫画面に表示"
    - "FilterChipは従来通りの動作を維持"
    - "単一選択のみ（複数選択は未実装）"
    - "Material Design準拠のUI"

  # 技術的改善点
  technical_improvements:
    - "既存のUIデザインを維持"
    - "ソート機能と一貫したUIパターン"
    - "直感的なカテゴリ選択体験"
    - "既存のフィルタリングロジックを活用"
    - "パフォーマンスへの影響なし"
    - "ユーザビリティの向上"

  # 技術スタック
  tech_stack:
    - "Flutter"
    - "Riverpod (State Management)"
    - "Material Design"
    - "Firebase Firestore"
    - "FilterChip Widget"
    - "PopupMenuButton Widget"

  # テスト状況
  testing:
    - "リンターエラーなし"
    - "既存のフィルタリングロジックは動作確認済み"
    - "UI実装は完了"
    - "アプリ実行で動作確認"