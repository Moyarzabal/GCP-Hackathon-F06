name: Deploy Branch Environment

on:
  push:
    branches-ignore:
      - main
      - master
    paths:
      - 'lib/**'
      - 'web/**'
      - 'pubspec.yaml'
      - 'pubspec.lock'

env:
  FLUTTER_VERSION: '3.29.0'

jobs:
  check-and-deploy:
    name: Deploy Branch Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    concurrency:
      group: branch-deploy-${{ github.ref_name }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract and validate branch name
        shell: bash
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          # FirebaseチャンネルIDに使用できない文字を置換
          SAFE_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9-]/-/g' | tr '[:upper:]' '[:lower:]')
          # 63文字制限を適用
          SAFE_BRANCH_NAME=${SAFE_BRANCH_NAME:0:50}

          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "safe_branch=$SAFE_BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "Original branch: $BRANCH_NAME"
          echo "Safe branch name: $SAFE_BRANCH_NAME"
        id: extract_branch

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            .dart_tool
          key: ${{ runner.os }}-flutter-branch-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-branch-
            ${{ runner.os }}-flutter-

      - name: Get dependencies
        run: flutter pub get

      - name: Quick build test
        run: |
          flutter analyze --no-fatal-infos || echo "Warning: Analysis issues found"
          echo "✅ Quick analysis completed"

      - name: Create .env file
        run: |
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" > .env
          echo "FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }}" >> .env
          echo "FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" >> .env
          echo "FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }}" >> .env
          echo "FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }}" >> .env
          echo "FIREBASE_IOS_CLIENT_ID=${{ secrets.FIREBASE_IOS_CLIENT_ID }}" >> .env
          echo "FIREBASE_IOS_BUNDLE_ID=${{ secrets.FIREBASE_IOS_BUNDLE_ID }}" >> .env

      - name: Build web for branch
        run: |
          flutter build web --release \
            --dart-define=ENVIRONMENT=development \
            --dart-define=BRANCH=${{ steps.extract_branch.outputs.branch }} \
            --dart-define=API_BASE_URL=https://dev-api.gcp-f06-barcode.com

      - name: Add branch deployment metadata
        run: |
          echo "{
            \"version\": \"${{ github.sha }}\",
            \"buildTime\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
            \"environment\": \"development\",
            \"branch\": \"${{ steps.extract_branch.outputs.branch }}\",
            \"safeBranch\": \"${{ steps.extract_branch.outputs.safe_branch }}\",
            \"commitMessage\": \"$(git log -1 --pretty=%B | head -1)\",
            \"author\": \"${{ github.actor }}\"
          }" > build/web/version.json

      - name: Deploy to Firebase Hosting (Branch Preview)
        uses: FirebaseExtended/action-hosting-deploy@v0
        id: deploy_branch
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_STAGING }}'
          projectId: gcp-f06-barcode
          channelId: branch-${{ steps.extract_branch.outputs.safe_branch }}
          expires: 30d
        continue-on-error: true

      - name: Handle deployment result
        run: |
          if [[ "${{ steps.deploy_branch.outcome }}" == "success" ]]; then
            echo "🚀 Branch deployment successful!"
            echo "📍 Branch: ${{ steps.extract_branch.outputs.branch }}"
            echo "🔗 URL: ${{ steps.deploy_branch.outputs.url }}"
            echo "⏰ Expires: ${{ steps.deploy_branch.outputs.expire_time }}"

            # GitHub環境にデプロイURLを設定
            echo "DEPLOY_URL=${{ steps.deploy_branch.outputs.url }}" >> $GITHUB_ENV
          else
            echo "⚠️ Branch deployment failed or encountered issues"
            echo "Check the Firebase Hosting configuration and try again"
            echo "Branch: ${{ steps.extract_branch.outputs.branch }}"
          fi

      - name: Create GitHub deployment
        if: steps.deploy_branch.outcome == 'success'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'branch-preview',
              description: 'Branch preview deployment for ${{ steps.extract_branch.outputs.branch }}',
              auto_merge: false,
              required_contexts: []
            });

            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment.data.id,
              state: 'success',
              environment_url: '${{ steps.deploy_branch.outputs.url }}',
              description: 'Branch preview deployed successfully'
            });

      - name: Summary
        run: |
          echo "## 🚀 Branch Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ steps.extract_branch.outputs.branch }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Author**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ steps.deploy_branch.outcome }}" == "success" ]]; then
            echo "- **Status**: ✅ Deployed Successfully" >> $GITHUB_STEP_SUMMARY
            echo "- **URL**: [${{ steps.deploy_branch.outputs.url }}](${{ steps.deploy_branch.outputs.url }})" >> $GITHUB_STEP_SUMMARY
            echo "- **Expires**: ${{ steps.deploy_branch.outputs.expire_time }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ⚠️ Deployment Failed" >> $GITHUB_STEP_SUMMARY
          fi