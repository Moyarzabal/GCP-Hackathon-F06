// Mocks generated by Mockito 5.4.6 from annotations
// in barcode_scanner/test/core/security/api_key_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:barcode_scanner/core/security/env_config.dart' as _i2;
import 'package:barcode_scanner/core/security/secure_storage.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseConfig_0 extends _i1.SmartFake
    implements _i2.FirebaseConfig {
  _FakeFirebaseConfig_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [SecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorage extends _i1.Mock implements _i3.SecureStorage {
  MockSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> store(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#store, [key, value]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> read(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#read, [key]),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<void> delete(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [key]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> clearAll() =>
      (super.noSuchMethod(
            Invocation.method(#clearAll, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> storeApiKey(String? keyName, String? apiKey) =>
      (super.noSuchMethod(
            Invocation.method(#storeApiKey, [keyName, apiKey]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> getApiKey(String? keyName) =>
      (super.noSuchMethod(
            Invocation.method(#getApiKey, [keyName]),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<void> setBiometricEnabled(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setBiometricEnabled, [enabled]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<bool> isBiometricEnabled() =>
      (super.noSuchMethod(
            Invocation.method(#isBiometricEnabled, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> storeEncrypted(String? key, String? data) =>
      (super.noSuchMethod(
            Invocation.method(#storeEncrypted, [key, data]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<String?> readEncrypted(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#readEncrypted, [key]),
            returnValue: _i4.Future<String?>.value(),
          )
          as _i4.Future<String?>);

  @override
  _i4.Future<bool> hasRequiredData() =>
      (super.noSuchMethod(
            Invocation.method(#hasRequiredData, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<Set<String>> getAllKeys() =>
      (super.noSuchMethod(
            Invocation.method(#getAllKeys, []),
            returnValue: _i4.Future<Set<String>>.value(<String>{}),
          )
          as _i4.Future<Set<String>>);
}

/// A class which mocks [EnvConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvConfig extends _i1.Mock implements _i2.EnvConfig {
  MockEnvConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isWeb =>
      (super.noSuchMethod(Invocation.getter(#isWeb), returnValue: false)
          as bool);

  @override
  bool get isDevelopment =>
      (super.noSuchMethod(Invocation.getter(#isDevelopment), returnValue: false)
          as bool);

  @override
  bool get isProduction =>
      (super.noSuchMethod(Invocation.getter(#isProduction), returnValue: false)
          as bool);

  @override
  _i2.FirebaseConfig getFirebaseConfig() =>
      (super.noSuchMethod(
            Invocation.method(#getFirebaseConfig, []),
            returnValue: _FakeFirebaseConfig_0(
              this,
              Invocation.method(#getFirebaseConfig, []),
            ),
          )
          as _i2.FirebaseConfig);
}
